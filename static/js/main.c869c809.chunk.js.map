{"version":3,"sources":["MyCcomponents/Form.js","MyCcomponents/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","text","setText","character","length","words","split","filter","element","className","Heading","value","onChange","e","target","id","rows","type","onClick","toUpperCase","toLowerCase","textArea","document","createElement","body","appendChild","select","execCommand","remove","alert","trim","Header","href","title","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uLAGe,SAASA,EAAKC,GACzB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAwCMC,EAAYF,EAAKG,OACjBC,EAAQJ,EAAKK,MAAM,KAAKC,QAAO,SAACC,GAAW,OAA0B,IAAnBA,EAAQJ,UAAeA,OAG/E,OACI,qCAEA,sBAAKK,UAAU,iBAAf,UACI,+BAAKV,EAAMW,QAAX,QAEI,qBAAKD,UAAU,aAAf,SACA,0BAAWE,MAASV,EAAMW,SAjDf,SAACC,GACpBX,EAAQW,EAAEC,OAAOH,QAgD6CF,UAAU,eAAeM,GAAG,8BAA8BC,KAAK,QAErH,wBAAQC,KAAK,UAAUC,QAhDb,WAClBhB,EAAQD,EAAKkB,gBA+C4CV,UAAU,4BAA3D,gCACA,wBAAQQ,KAAK,SAASC,QA5CV,WAClBhB,EAAQD,EAAKmB,gBA2C2CX,UAAU,4BAA5D,gCACA,wBAAQQ,KAAK,SAASC,QArCV,WACpB,IAAIG,EAAWC,SAASC,cAAc,YACtCF,EAASV,MAAQV,EACjBqB,SAASE,KAAKC,YAAYJ,GAC1BA,EAASK,SACTJ,SAASK,YAAY,QACrBN,EAASO,SAETC,MAAM,wBA6BoDpB,UAAU,4BAA5D,+BACA,wBAAQQ,KAAK,SAASC,QApBT,WACjBhB,EAAQD,EAAK6B,SAmB0CrB,UAAU,4BAA7D,iCACA,wBAAQQ,KAAK,SAASC,QAzBT,WACrBhB,EAAQ,KAwBmDO,UAAU,4BAA7D,2BAKR,sBAAKA,UAAU,kBAAf,UACI,qDACA,+CAAiB,iCAASN,IAA1B,mBAA6D,iCAASE,IAAtE,eACA,yCACA,4BAAKJ,UCjEF,SAAS8B,EAAOhC,GAC3B,OAEI,qBAAKU,UAAU,8CAAf,SACA,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,eAAeuB,KAAK,IAAjC,SAAsCjC,EAAMkC,QAC5C,wBAAQxB,UAAU,iBAAiBQ,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMR,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BM,GAAG,yBAA7C,SACE,oBAAIN,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOuB,KAAK,IAAxD,6B,mBCeDE,MAnBf,WAGE,OACE,qCACA,cAACH,EAAD,CAAQE,MAAQ,eAChB,cAAC,IAAD,UACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAQE,OAAK,EAACC,KAAK,IAAnB,SACE,cAACtC,EAAD,CAAMY,QAAU,yCCVX2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,SAM1BZ,M","file":"static/js/main.c869c809.chunk.js","sourcesContent":["import React , {useState} from 'react'\r\n\r\n\r\nexport default function Form(props) {\r\n    const [text, setText] = useState(\"\");\r\n    \r\n    const handleOnChange = (e) => {\r\n        setText(e.target.value);\r\n       };\r\n    const handleUpClick = () => {\r\n        setText(text.toUpperCase());\r\n        };\r\n\r\n    \r\n    const handleDownClick = () => {\r\n          setText(text.toLowerCase());\r\n        //   sleep(5000);\r\n        };\r\n\r\n    \r\n\r\n    // #copy to clipboard\r\n    const handleCopyClick = () => {\r\n        let textArea = document.createElement(\"textarea\");\r\n        textArea.value = text;\r\n        document.body.appendChild(textArea);\r\n        textArea.select();\r\n        document.execCommand(\"copy\");\r\n        textArea.remove();\r\n        //auto dismissing alert\r\n        alert(\"Copied to clipboard\");\r\n\r\n        };\r\n\r\n\r\n    //clear text\r\n    const handleClearClick = () => {\r\n        setText(\"\");\r\n        };\r\n    //remove extra space\r\n    const handleExtraSpace = () => {\r\n            setText(text.trim());\r\n        };\r\n\r\n    const character = text.length;\r\n    const words = text.split(\" \").filter((element)=>{return element.length !== 0}).length;\r\n    \r\n    \r\n    return (\r\n        <>\r\n    \r\n        <div className=\"container my-3\">\r\n            <h1>{props.Heading}  </h1>\r\n           \r\n                <div className=\"form-group\">\r\n                <textarea  value = {text} onChange = {handleOnChange} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button type=\"success\" onClick = {handleUpClick} className=\"btn btn-primary my-3 mx-1\">Click to UPPERCASE</button>\r\n                <button type=\"submit\" onClick = {handleDownClick} className=\"btn btn-primary my-3 mx-1\">Click to lowercase</button>\r\n                <button type=\"submit\" onClick = {handleCopyClick} className=\"btn btn-primary my-3 mx-1\">Copy to clipboard</button>\r\n                <button type=\"submit\" onClick = {handleExtraSpace} className=\"btn btn-primary my-3 mx-1\">Remove Extra Spaces</button>\r\n                <button type=\"submit\" onClick = {handleClearClick} className=\"btn btn-primary my-3 mx-1\">Clear Text</button>\r\n                \r\n           \r\n        </div>\r\n\r\n        <div className=\"container my-2 \" >\r\n            <h2>Your Text Summary :</h2>\r\n            <p>Your Text has <strong>{character}</strong> characters and <strong>{words}</strong> Words . </p>\r\n            <h3>Preview</h3>\r\n            <p >{text}</p>\r\n        </div>\r\n        \r\n        </>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function Header(props) {\r\n    return (\r\n      \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" href=\"/about\">About</a>\r\n              </li> */}\r\n              \r\n              \r\n            </ul>\r\n            \r\n          </div>\r\n        </div>\r\n      </nav>\r\n      \r\n    )\r\n}\r\n\r\nHeader.propTypes = {name: PropTypes.string}\r\n\r\n","import React  from 'react'\r\nimport Form from \"./MyCcomponents/Form\";\r\nimport Header from \"./MyCcomponents/Header\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n  \r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n\r\n  return (\r\n    <>\r\n    <Header title = \"TEXT UTILS\" />\r\n    <Router>\r\n    <Switch>\r\n        <Route  exact path=\"/\">\r\n          <Form Heading = \"Enter your Text to Process\" />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n    </>\r\n    );\r\n    \r\n  \r\n}\r\n\r\nexport default App;\r\n ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}